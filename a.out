Classfile /Users/someshbalani/workspace/j--/ExceptionHandlers.class
  Last modified 27-Apr-2023; size 955 bytes
  SHA-256 checksum fe48604149720efe772ad78ac6f6d18c85bad7a1f4c75061604bbdaea92f5391
public class ExceptionHandlers
  minor version: 0
  major version: 49
  flags: (0x0001) ACC_PUBLIC
  this_class: #2                          // ExceptionHandlers
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 3, attributes: 0
Constant pool:
   #1 = Utf8               ExceptionHandlers
   #2 = Class              #1             // ExceptionHandlers
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               <init>
   #6 = Utf8               ()V
   #7 = NameAndType        #5:#6          // "<init>":()V
   #8 = Methodref          #4.#7          // java/lang/Object."<init>":()V
   #9 = Utf8               Code
  #10 = Utf8               main
  #11 = Utf8               ([Ljava/lang/String;)V
  #12 = Utf8               java/lang/Double
  #13 = Class              #12            // java/lang/Double
  #14 = Utf8               parseDouble
  #15 = Utf8               (Ljava/lang/String;)D
  #16 = NameAndType        #14:#15        // parseDouble:(Ljava/lang/String;)D
  #17 = Methodref          #13.#16        // java/lang/Double.parseDouble:(Ljava/lang/String;)D
  #18 = Utf8               sqrt
  #19 = Utf8               (D)D
  #20 = NameAndType        #18:#19        // sqrt:(D)D
  #21 = Methodref          #2.#20         // ExceptionHandlers.sqrt:(D)D
  #22 = Utf8               java/lang/System
  #23 = Class              #22            // java/lang/System
  #24 = Utf8               out
  #25 = Utf8               Ljava/io/PrintStream;
  #26 = NameAndType        #24:#25        // out:Ljava/io/PrintStream;
  #27 = Fieldref           #23.#26        // java/lang/System.out:Ljava/io/PrintStream;
  #28 = Utf8               java/io/PrintStream
  #29 = Class              #28            // java/io/PrintStream
  #30 = Utf8               println
  #31 = Utf8               (D)V
  #32 = NameAndType        #30:#31        // println:(D)V
  #33 = Methodref          #29.#32        // java/io/PrintStream.println:(D)V
  #34 = Utf8               Done!
  #35 = String             #34            // Done!
  #36 = Utf8               (Ljava/lang/String;)V
  #37 = NameAndType        #30:#36        // println:(Ljava/lang/String;)V
  #38 = Methodref          #29.#37        // java/io/PrintStream.println:(Ljava/lang/String;)V
  #39 = Utf8               x not specified
  #40 = String             #39            // x not specified
  #41 = Utf8               x must be a double
  #42 = String             #41            // x must be a double
  #43 = Utf8               java/lang/IllegalArgumentException
  #44 = Class              #43            // java/lang/IllegalArgumentException
  #45 = Utf8               getMessage
  #46 = Utf8               ()Ljava/lang/String;
  #47 = NameAndType        #45:#46        // getMessage:()Ljava/lang/String;
  #48 = Methodref          #44.#47        // java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;
  #49 = Utf8               java/lang/ArrayIndexOutOfBoundsException
  #50 = Class              #49            // java/lang/ArrayIndexOutOfBoundsException
  #51 = Utf8               java/lang/NumberFormatException
  #52 = Class              #51            // java/lang/NumberFormatException
  #53 = Utf8               Exceptions
  #54 = Utf8               x must be positve
  #55 = String             #54            // x must be positve
  #56 = NameAndType        #5:#36         // "<init>":(Ljava/lang/String;)V
  #57 = Methodref          #44.#56        // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
  #58 = Utf8               java/lang/Math
  #59 = Class              #58            // java/lang/Math
  #60 = Methodref          #59.#20        // java/lang/Math.sqrt:(D)D
{
  public ExceptionHandlers();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #8                  // Method java/lang/Object."<init>":()V
         4: return

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=5, args_size=1
         0: aload_0
         1: iconst_0
         2: aaload
         3: invokestatic  #17                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
         6: dstore_1
         7: dload_1
         8: invokestatic  #21                 // Method sqrt:(D)D
        11: dstore_3
        12: getstatic     #27                 // Field java/lang/System.out:Ljava/io/PrintStream;
        15: dload_3
        16: invokevirtual #33                 // Method java/io/PrintStream.println:(D)V
        19: getstatic     #27                 // Field java/lang/System.out:Ljava/io/PrintStream;
        22: ldc           #35                 // String Done!
        24: invokevirtual #38                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        27: goto          105
        30: astore_1
        31: getstatic     #27                 // Field java/lang/System.out:Ljava/io/PrintStream;
        34: ldc           #40                 // String x not specified
        36: invokevirtual #38                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        39: getstatic     #27                 // Field java/lang/System.out:Ljava/io/PrintStream;
        42: ldc           #35                 // String Done!
        44: invokevirtual #38                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        47: goto          105
        50: astore_1
        51: getstatic     #27                 // Field java/lang/System.out:Ljava/io/PrintStream;
        54: ldc           #42                 // String x must be a double
        56: invokevirtual #38                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        59: getstatic     #27                 // Field java/lang/System.out:Ljava/io/PrintStream;
        62: ldc           #35                 // String Done!
        64: invokevirtual #38                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        67: goto          105
        70: astore_1
        71: getstatic     #27                 // Field java/lang/System.out:Ljava/io/PrintStream;
        74: aload_1
        75: invokevirtual #48                 // Method java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;
        78: invokevirtual #38                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        81: getstatic     #27                 // Field java/lang/System.out:Ljava/io/PrintStream;
        84: ldc           #35                 // String Done!
        86: invokevirtual #38                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        89: goto          105
        92: astore        0
        94: getstatic     #27                 // Field java/lang/System.out:Ljava/io/PrintStream;
        97: ldc           #35                 // String Done!
        99: invokevirtual #38                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       102: aload         0
       104: athrow
       105: return
      Exception table:
         from    to  target type
             0    30    70   Class java/lang/ArrayIndexOutOfBoundsException
             0    30    70   Class java/lang/NumberFormatException
             0    30    70   Class java/lang/IllegalArgumentException
             0    30    92   any
            70    81    92   any
            70    81    92   any
            70    81    92   any
            92    94    92   any

  private static double sqrt(double) throws java.lang.IllegalArgumentException;
    descriptor: (D)D
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Exceptions:
      throws java.lang.IllegalArgumentException
    Code:
      stack=4, locals=2, args_size=1
         0: dload_0
         1: dconst_0
         2: dcmpg
         3: ifge          16
         6: new           #44                 // class java/lang/IllegalArgumentException
         9: dup
        10: ldc           #55                 // String x must be positve
        12: invokespecial #57                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        15: athrow
        16: dload_0
        17: invokestatic  #60                 // Method java/lang/Math.sqrt:(D)D
        20: dreturn
}
